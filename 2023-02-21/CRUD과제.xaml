<Activity mc:Ignorable="sap sap2010" x:Class="CRUD과제" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1080,4336" sap2010:WorkflowViewState.IdRef="CRUD과제_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="41">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="57">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CRUD과제" sap:VirtualizedContainerService.HintSize="1004,4271" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="CrudDb" />
      <Variable x:TypeArguments="sd:DataTable" Name="rawDataDt" />
      <Variable x:TypeArguments="sd:DataTable" Name="crudDt" />
      <Variable x:TypeArguments="sd:DataTable" Name="updateDt" />
      <Variable x:TypeArguments="x:String" Name="strInput">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="deleteDt" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:DatabaseConnect DisplayName="Connect to database" sap:VirtualizedContainerService.HintSize="942,60" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="Microsoft.Data.SqlClient" ConnectionString="Data Source=192.168.0.26;Initial Catalog=EDU_DB;Persist Security Info=True;User ID=edudb;Password=edu@db;Encrypt=False" DatabaseConnection="[CrudDb]" />
    <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[strInput &lt;&gt; &quot;0&quot;]" DisplayName="While" sap:VirtualizedContainerService.HintSize="942,4060" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="906,3894" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="844,239" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="1. insert, 2. update, 3. delete, 4. select, 0. 종료" Title="DB CRUD 입니다. 숫자를 입력해주세요">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[strInput]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="844,3504" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <Switch x:TypeArguments="x:Int32" DisplayName="Switch" Expression="[cint(strInput)]" sap:VirtualizedContainerService.HintSize="806,3276" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                <Sequence x:Key="1" sap:VirtualizedContainerService.HintSize="828,2982" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="766,2871" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                    <ueab:ExcelProcessScopeX.Body>
                      <ActivityAction x:TypeArguments="ui:IExcelProcess">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="732,2784" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="670,2673" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="C:\Users\0118\Desktop\random_data.xlsx">
                            <ueab:ExcelApplicationCard.Body>
                              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="636,2404" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="dataDt" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dataDt]" DisplayName="Run query" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_8" Sql="select * from T_230309_WSE_HWANG">
                                    <ui:ExecuteQuery.Parameters>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:ExecuteQuery.Parameters>
                                  </ui:ExecuteQuery>
                                  <If Condition="[dataDt.RowCount = 0]" sap:VirtualizedContainerService.HintSize="574,705" sap2010:WorkflowViewState.IdRef="If_1">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="496,426" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_1" TargetRange="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:S9999&quot;)]" />
                                        <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:S9999&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_8" IgnoreEmptySource="False" Source="[dataDt]" />
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <ui:ClearDataTable DataTable="[dataDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_10" />
                                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="574,85" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;INSERT Sheet에 데이터를 입력 후 확인을 눌러주세요 &quot;]" />
                                  <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="574,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;INSERT&quot;).Range(&quot;A1:S21&quot;)]" ReadFormatting="Default" SaveTo="[crudDt]" />
                                  <ui:InsertDataTable AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" DataTable="[crudDt]" DisplayName="Insert" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,116" sap2010:WorkflowViewState.IdRef="InsertDataTable_1" TableName="T_230309_WSE_HWANG" />
                                  <ui:ClearDataTable DataTable="[crudDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_2" />
                                  <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dataDt]" DisplayName="Run query" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="select * from T_230309_WSE_HWANG">
                                    <ui:ExecuteQuery.Parameters>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:ExecuteQuery.Parameters>
                                  </ui:ExecuteQuery>
                                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="574,85" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;insert가 완료되었습니다. 현재 DB구조는 DATA Sheet에서 확인 가능합니다&quot;]" />
                                  <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="574,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_2" TargetRange="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:S9999&quot;)]" />
                                  <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:S9999&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="574,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[dataDt]" />
                                  <ui:ClearDataTable DataTable="[dataDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_3" />
                                </Sequence>
                              </ActivityAction>
                            </ueab:ExcelApplicationCard.Body>
                          </ueab:ExcelApplicationCard>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelProcessScopeX.Body>
                  </ueab:ExcelProcessScopeX>
                </Sequence>
                <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" x:Key="2" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="766,3697" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
                  <ueab:ExcelProcessScopeX.Body>
                    <ActivityAction x:TypeArguments="ui:IExcelProcess">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="732,3610" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="670,3499" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" WorkbookPath="C:\Users\0118\Desktop\random_data.xlsx">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="636,3230" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="sd:DataTable" Name="dataDt" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dataDt]" DisplayName="Run query" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_6" Sql="select * from T_230309_WSE_HWANG">
                                  <ui:ExecuteQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteQuery.Parameters>
                                </ui:ExecuteQuery>
                                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[deleteDt]" DisplayName="Run query" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_13" Sql="select * from T_230309_WSE_HWANG where status &lt;&gt; 'D'">
                                  <ui:ExecuteQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteQuery.Parameters>
                                </ui:ExecuteQuery>
                                <If Condition="[dataDt.RowCount = 0]" sap:VirtualizedContainerService.HintSize="574,1060" sap2010:WorkflowViewState.IdRef="If_2">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="496,781" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_4" TargetRange="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:S9999&quot;)]" />
                                      <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:S9999&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_9" IgnoreEmptySource="False" Source="[dataDt]" />
                                      <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_9" TargetRange="[Excel.Sheet(&quot;UPDATE&quot;).Range(&quot;A1:S9999&quot;)]" />
                                      <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;UPDATE&quot;).Range(&quot;A1:S9999&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_12" IgnoreEmptySource="False" Source="[deleteDt]" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <ui:ClearDataTable DataTable="[dataDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_13" />
                                <ui:ClearDataTable DataTable="[deleteDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_19" />
                                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="574,85" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[&quot;UPDATE Sheet에 데이터를 입력 후 해당 id의 status 데이터를 'U'로 변경 후 확인을 눌러주세요 &quot;]" />
                                <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="574,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[Excel.Sheet(&quot;UPDATE&quot;).Range(&quot;A1:S21&quot;)]" ReadFormatting="Default" SaveTo="[updateDt]" />
                                <ui:BulkUpdate AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" BulkUpdateFlag="False" ColumnNames="[{&quot;id&quot;}]" DataTable="[updateDt]" DisplayName="Bulk Update" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,209" sap2010:WorkflowViewState.IdRef="BulkUpdate_1" TableName="T_230309_WSE_HWANG" />
                                <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run query" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_12" Sql="update T_230309_WSE_HWANG set update_time = getdate() where status = 'U'">
                                  <ui:ExecuteQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteQuery.Parameters>
                                </ui:ExecuteQuery>
                                <ui:ClearDataTable DataTable="[updateDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_5" />
                                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dataDt]" DisplayName="Run query" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="select * from T_230309_WSE_HWANG">
                                  <ui:ExecuteQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteQuery.Parameters>
                                </ui:ExecuteQuery>
                                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="574,85" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[&quot;UPDATE가 완료되었습니다. 현재 DB구조는 DATA Sheet에서 확인 가능합니다&quot;]" />
                                <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="574,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_3" TargetRange="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:S9999&quot;)]" />
                                <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:S9999&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="574,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False" Source="[dataDt]" />
                                <ui:ClearDataTable DataTable="[dataDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_6" />
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                        </ueab:ExcelApplicationCard>
                      </Sequence>
                    </ActivityAction>
                  </ueab:ExcelProcessScopeX.Body>
                </ueab:ExcelProcessScopeX>
                <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" x:Key="3" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="766,3004" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3">
                  <ueab:ExcelProcessScopeX.Body>
                    <ActivityAction x:TypeArguments="ui:IExcelProcess">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="732,2917" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="670,2806" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None" WorkbookPath="C:\Users\0118\Desktop\random_data.xlsx">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="636,2497" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="sd:DataTable" Name="dataDt" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dataDt]" DisplayName="Run query" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_9" Sql="select * from T_230309_WSE_HWANG">
                                  <ui:ExecuteQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteQuery.Parameters>
                                </ui:ExecuteQuery>
                                <If Condition="[dataDt.RowCount = 0]" sap:VirtualizedContainerService.HintSize="574,705" sap2010:WorkflowViewState.IdRef="If_3">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="496,426" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_6" TargetRange="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:Z9999&quot;)]" />
                                      <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:Z9999&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_10" IgnoreEmptySource="False" Source="[dataDt]" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <ui:ClearDataTable DataTable="[dataDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_15" />
                                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="574,85" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[&quot;DATA Sheet에서 지우고싶은 행의 status 상태를 'D'로 바꿔주세요&quot;]" />
                                <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="574,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(&quot;DATA&quot;)]" ReadFormatting="Default" SaveTo="[deleteDt]" />
                                <ui:BulkUpdate AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" BulkUpdateFlag="False" ColumnNames="[{&quot;id&quot;}]" DataTable="[deleteDt]" DisplayName="Bulk Update" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,209" sap2010:WorkflowViewState.IdRef="BulkUpdate_2" TableName="T_230309_WSE_HWANG" />
                                <ui:ClearDataTable DataTable="[deleteDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_9" />
                                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dataDt]" DisplayName="Run query" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="select * from T_230309_WSE_HWANG where status &lt;&gt; 'D'">
                                  <ui:ExecuteQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteQuery.Parameters>
                                </ui:ExecuteQuery>
                                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="574,85" sap2010:WorkflowViewState.IdRef="MessageBox_7" Text="[&quot;deletet가 완료되었습니다. DELETE Sheet에서 확인 가능합니다&quot;]" />
                                <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="574,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_5" TargetRange="[Excel.Sheet(&quot;DELETE&quot;).Range(&quot;A1:S9999&quot;)]" />
                                <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;DELETE&quot;).Range(&quot;A1:S9999&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="574,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_3" IgnoreEmptySource="False" Source="[dataDt]" />
                                <ui:ClearDataTable DataTable="[dataDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_8" />
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                        </ueab:ExcelApplicationCard>
                      </Sequence>
                    </ActivityAction>
                  </ueab:ExcelProcessScopeX.Body>
                </ueab:ExcelProcessScopeX>
                <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" x:Key="4" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="766,2580" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_4">
                  <ueab:ExcelProcessScopeX.Body>
                    <ActivityAction x:TypeArguments="ui:IExcelProcess">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="732,2493" sap2010:WorkflowViewState.IdRef="Sequence_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="670,2382" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" ResizeWindow="None" WorkbookPath="C:\Users\0118\Desktop\random_data.xlsx">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="636,2073" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="sd:DataTable" Name="dataDt" />
                                  <Variable x:TypeArguments="x:String" Name="strSelect" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dataDt]" DisplayName="Run query" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_10" Sql="select * from T_230309_WSE_HWANG">
                                  <ui:ExecuteQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteQuery.Parameters>
                                </ui:ExecuteQuery>
                                <If Condition="[dataDt.RowCount = 0]" sap:VirtualizedContainerService.HintSize="574,705" sap2010:WorkflowViewState.IdRef="If_4">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="496,426" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_8" TargetRange="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:S9999&quot;)]" />
                                      <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;DATA&quot;).Range(&quot;A1:S9999&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_11" IgnoreEmptySource="False" Source="[dataDt]" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <ui:ClearDataTable DataTable="[dataDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_17" />
                                <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="574,239" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="[&quot;id&quot; + Environment.NewLine + &quot;first_name&quot; + Environment.NewLine + &quot;last_name&quot; + Environment.NewLine + &quot;email&quot; + Environment.NewLine + &quot;gender&quot; + Environment.NewLine + &quot;country&quot; + Environment.NewLine + &quot;city&quot; + Environment.NewLine + &quot;state&quot; + Environment.NewLine + &quot;street_number&quot; + Environment.NewLine + &quot;street_name&quot; + Environment.NewLine + &quot;street_suffix&quot; + Environment.NewLine + &quot;car_make&quot; + Environment.NewLine + &quot;car_model&quot; + Environment.NewLine + &quot;car_year&quot; + Environment.NewLine + &quot;job&quot; + Environment.NewLine + &quot;race&quot; + Environment.NewLine + &quot;insert_time&quot; + Environment.NewLine + &quot;status&quot; + Environment.NewLine + &quot;update_time&quot; + Environment.NewLine + &quot;중 선택&quot;]" Title="찾고싶은 정보를 입력해주세요">
                                  <ui:InputDialog.Result>
                                    <OutArgument x:TypeArguments="x:String">[strSelect]</OutArgument>
                                  </ui:InputDialog.Result>
                                </ui:InputDialog>
                                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dataDt]" DisplayName="Run query" ExistingDbConnection="[CrudDb]" sap:VirtualizedContainerService.HintSize="574,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" Sql="[&quot;select &quot; + strSelect + &quot; from T_230309_WSE_HWANG&quot;]">
                                  <ui:ExecuteQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteQuery.Parameters>
                                </ui:ExecuteQuery>
                                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="574,85" sap2010:WorkflowViewState.IdRef="MessageBox_9" Text="[&quot;select가 완료되었습니다. 해당 정보는 SELECT Sheet에서 확인 가능합니다&quot;]" />
                                <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="574,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_7" TargetRange="[Excel.Sheet(&quot;SELECT&quot;).Range(&quot;A1:S9999&quot;)]" />
                                <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;SELECT&quot;).Range(&quot;A1:S9999&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="574,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_4" IgnoreEmptySource="False" Source="[dataDt]" />
                                <ui:ClearDataTable DataTable="[dataDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_18" />
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                        </ueab:ExcelApplicationCard>
                      </Sequence>
                    </ActivityAction>
                  </ueab:ExcelProcessScopeX.Body>
                </ueab:ExcelProcessScopeX>
                <ui:Break x:Key="0" sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Break_1" />
              </Switch>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="810,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;1, 2, 3, 4, 0 중에서만 입력 가능합니다.&quot;]" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ui:InterruptibleWhile.Body>
    </ui:InterruptibleWhile>
  </Sequence>
</Activity>